{"/Components/Alert":{"title":"Alert","data":{"":"The Alert component provides a simple way to display alert messages to users. It supports various types of alerts, such as success, error, warning, and info, and can be customized with different positions and durations.","installation#Installation":"Requirements: React version >= 16.8 or abovewith yarn:\nyarn add react-toastify\nwith npm:\nnpm install --save react-toastify","the-playground#The Playground":"","toas-container#Toas Container":"<ToastContainer\n  position=\"top-right\"\n  autoClose={5000}\n  hideProgressBar={false}\n  newestOnTop={false}\n  closeOnClick\n  rtl={false}\n  pauseOnFocusLoss\n  draggable\n  pauseOnHover\n  theme=\"light\"\n  transition:Bounce\n/>;\n{\n  /* Same as */\n}\n<ToastContainer />;","toast-emitter#Toast Emitter":"toast('ðŸ¦„ Wow so easy!', {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'light',\n  transition: Bounce,\n});","examples#Examples":"","success-alert#Success Alert":"Info\nWarning\nSuccess\nError\nimport { Alert, alertMessage } from './path-to-alert-component';\nconst App = () => {\n  return (\n    <div className=\"flex items-center justify-center h-screen bg-gray-100\">\n      <Button\n        variant=\"primary\"\n        size=\"medium\"\n        className=\"mt-4 bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-blue-600 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105\"\n        onClick={() =>\n          alertMessage.success('Success Notification!', {\n            position: 'top-center',\n          })\n        }\n      >\n        Show Alert\n      </Button>\n      <Alert />\n    </div>\n  );\n};\nexport default App;"}},"/Components/button":{"title":"Button","data":{"":"Use the Button component with custom styles for actions in forms, dialogs, and more, with support for multiple sizes, states, and more.","examples#Examples":"Primary\nSecondary\nSuccess\nDanger\nWarning\nInfo\nLight\nDark","code-examples#Code Examples":"<div className=\"mb-3\">\n  <Button variant=\"primary\" size=\"medium\" className=\"me-2\"> Primary </Button>\n  <Button variant=\"secondary\" size=\"medium\" className=\"me-2\">Secondary</Button>\n  <Button variant=\"success\" size=\"medium\" className=\"me-2\">Success</Button>\n  <Button variant=\"danger\" size=\"medium\" className=\"me-2\">Danger</Button>\n  <Button variant=\"warning\" size=\"medium\" className=\"me-2\">Warning</Button>\n  <Button variant=\"info\" size=\"medium\" className=\"me-2\">Info</Button>\n  <Button variant=\"light\" size=\"medium\" className=\"me-2\">Light</Button>\n  <Button variant=\"dark\" size=\"medium\" className=\"me-2\">Dark</Button>\n</div>","outline-buttons#Outline Buttons":"If you need a button without the hefty background colors, use the outline prop to create an outline button.","examples-1#Examples":"Primary\nSecondary\nSuccess\nDanger\nWarning\nInfo\nLight\nDark","code-examples-1#Code Examples":"<div className=\"mb-3\">\n  <Button variant=\"primary\" outline size=\"medium\" className=\"me-2\">Primary</Button>\n  <Button variant=\"secondary\" outline size=\"medium\" className=\"me-2\">Secondary</Button>\n  <Button variant=\"success\" outline size=\"medium\" className=\"me-2\">Success</Button>\n  <Button variant=\"danger\" outline size=\"medium\" className=\"me-2\">Danger</Button>\n  <Button variant=\"warning\" outline size=\"medium\" className=\"me-2\">Warning</Button>\n  <Button variant=\"info\" outline size=\"medium\" className=\"me-2\">Info</Button>\n  <Button variant=\"light\" outline size=\"medium\" className=\"me-2\">Light</Button>\n  <Button variant=\"dark\" outline size=\"medium\" className=\"me-2\">Dark</Button>\n</div>","sizes#Sizes":"Fancy larger or smaller buttons? Use the size prop with lg or sm for additional sizes.","examples-2#Examples":"Large Primary\nSmall Primary","code-examples-2#Code Examples":"<div className=\"mb-3\">\n  <Button variant=\"primary\" size=\"lg\" className=\"me-2\">Large Primary</Button>\n  <Button variant=\"primary\" size=\"sm\" className=\"me-2\">Small Primary</Button>\n</div>","props#Props":"Prop\tType\tDefault\tDescription\tchildren\tnode\t-\tThe content inside the button, typically text or other elements.\tvariant\tstring\t'primary'\tDetermines the button's color scheme and styling. Available options are primary, secondary, success, danger, warning, info, light, dark, link.\toutline\tbool\tfalse\tWhether to show a border with text color instead of a solid background.\tsize\tstring\t'medium'\tDetermines the button's size. Available options are small, medium, large.\tclassName\tstring\t''\tAdditional CSS classes to apply to the button for further customization."}},"/Components/select":{"title":"Select Component","data":{"installation#Installation":"Start by installing react-select:\nyarn add react-select\nor\nnpm i --save react-select\nThe Select component is a customizable select input built on top of the react-select library. It provides various features such as multi-select, search functionality, clearable options, and more.","examples#Examples":"","basic-select#Basic Select":"A basic example demonstrating the use of the Select component with a simple set of options.\nimport Select from '../../components/Select';\nconst basicOptions = [\n  { value: 'apple', label: 'Apple' },\n  { value: 'banana', label: 'Banana' },\n  { value: 'cherry', label: 'Cherry' },\n  { value: 'date', label: 'Date' },\n  { value: 'elderberry', label: 'Elderberry' },\n];\nconst App = () => (\n  <Select options={basicOptions} defaultValue={basicOptions[0]} />\n);\nexport default App;","multi-select#Multi-Select":"An example demonstrating the use of the Select component with multi-select functionality enabled.\nimport Select from '../../components/Select';\nconst multiSelectOptions = [\n  { value: 'red', label: 'Red' },\n  { value: 'blue', label: 'Blue' },\n  { value: 'green', label: 'Green' },\n  { value: 'yellow', label: 'Yellow' },\n  { value: 'purple', label: 'Purple' },\n];\nconst App = () => (\n  <Select\n    options={multiSelectOptions}\n    isMulti\n    defaultValue={[multiSelectOptions[0], multiSelectOptions[1]]}\n  />\n);\nexport default App;","disabled#Disabled":"An example demonstrating the use of the Select component with the disabled state.\nconst disabledOptions = [\n  { value: 'car', label: 'Car' },\n  { value: 'bike', label: 'Bike' },\n  { value: 'bus', label: 'Bus' },\n  { value: 'train', label: 'Train' },\n  { value: 'airplane', label: 'Airplane' },\n];\nconst App = () => <Select options={disabledOptions} isDisabled />;\nexport default App;","animated-components#Animated Components":"React-Select comes with a makeAnimated function that create animated wrappers around components passed in as arguments. If no arguments are passed, built-in components are wrapped instead.\nimport makeAnimated from 'react-select/animated';\nimport Select from '../../components/Select';\nconst multiSelectOptions = [\n  { value: 'red', label: 'Red' },\n  { value: 'blue', label: 'Blue' },\n  { value: 'green', label: 'Green' },\n  { value: 'yellow', label: 'Yellow' },\n  { value: 'purple', label: 'Purple' },\n];\nconst animatedComponents = makeAnimated();\nexport default function AnimatedMulti() {\n  return (\n    <Select\n      options={multiSelectOptions}\n      isMulti\n      defaultValue={[multiSelectOptions[3], multiSelectOptions[4]]}\n      components={animatedComponents}\n    />\n  );\n}","props#Props":"Prop\tType\tDefault\tDescription\toptions\tarray\t-\tAn array of options to display in the select menu. Each option is an object with value and label keys.\tdefaultValue\tobject\t-\tThe default selected option.\tisDisabled\tbool\tfalse\tWhether the select input is disabled.\tisLoading\tbool\tfalse\tWhether the select input is loading.\tisClearable\tbool\ttrue\tWhether the selected option can be cleared.\tisRtl\tbool\tfalse\tWhether to display the select input in right-to-left mode.\tisSearchable\tbool\tfalse\tWhether the select input is searchable.\tisMulti\tbool\tfalse\tWhether to enable multi-select functionality.\tclassName\tstring\t'basic-single'\tAdditional CSS classes to apply to the select input.\tclassNamePrefix\tstring\t'select'\tPrefix for the CSS class names.\tname\tstring\t'select'\tThe name attribute of the select input.\tplaceholder\tstring\t'Select...'\tPlaceholder text for the select input.\tprops\tobject\t-\tAdditional props passed to the react-select component."}}}